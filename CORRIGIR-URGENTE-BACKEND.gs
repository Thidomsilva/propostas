// =============================================
// SCRIPT DE CORRE√á√ÉO URGENTE - EXECUTAR IMEDIATAMENTE
// =============================================
// Este script deve ser executado MANUALMENTE no Google Apps Script

function EXECUTAR_CORRECAO_URGENTE() {
  console.log('üö® INICIANDO CORRE√á√ÉO URGENTE DO SISTEMA...');
  
  try {
    var SPREADSHEET_ID = '12TDtLrXg4NM6H4kc6_x8gjsQCdKl76fkuqFCRc4-QRo';
    var SHEET_NAME = 'propostasacompanhamento';
    
    var planilha = SpreadsheetApp.openById(SPREADSHEET_ID);
    var aba = planilha.getSheetByName(SHEET_NAME);
    
    if (!aba) {
      console.log('‚ùå Planilha n√£o encontrada!');
      return 'ERRO: Planilha n√£o encontrada';
    }
    
    // 1. CORRIGIR CABE√áALHOS
    console.log('üìã Corrigindo cabe√ßalhos...');
    var cabe√ßalhoCorreto = ['Data', 'Cliente', 'Servi√ßo', 'Solicitante', 'Descri√ß√£o', 'Prazo', 'Status', 'Observa√ß√µes', 'Data Atualiza√ß√£o'];
    aba.getRange(1, 1, 1, cabe√ßalhoCorreto.length).setValues([cabe√ßalhoCorreto]);
    console.log('‚úÖ Cabe√ßalhos corrigidos');
    
    // 2. CORRIGIR DADOS INCORRETOS
    console.log('üîß Corrigindo dados incorretos...');
    var dados = aba.getDataRange().getValues();
    var correcoes = 0;
    
    for (var i = 1; i < dados.length; i++) {
      var linha = dados[i];
      
      // Se a coluna F (prazo) cont√©m status em vez de data
      if (linha[5] === 'Pendente' || linha[5] === 'Em Andamento' || linha[5] === 'Conclu√≠do' || linha[5] === 'Cancelado') {
        console.log('üîß Linha ' + (i + 1) + ': Corrigindo status na coluna prazo');
        
        // Mover status para a posi√ß√£o correta (coluna G)
        aba.getRange(i + 1, 7).setValue(linha[5]); // G = Status
        aba.getRange(i + 1, 6).setValue(''); // F = Prazo (limpar)
        
        correcoes++;
      }
    }
    
    console.log('‚úÖ Corre√ß√µes aplicadas: ' + correcoes);
    
    // 3. VERIFICAR RESULTADO
    console.log('üîç Verificando resultado...');
    var dadosCorrigidos = aba.getDataRange().getValues();
    
    console.log('üìä RESULTADO DA CORRE√á√ÉO:');
    for (var j = 1; j <= Math.min(3, dadosCorrigidos.length - 1); j++) {
      var linhaCorrigida = dadosCorrigidos[j];
      console.log('Linha ' + (j + 1) + ':');
      console.log('  F-Prazo: "' + linhaCorrigida[5] + '"');
      console.log('  G-Status: "' + linhaCorrigida[6] + '"');
    }
    
    var mensagem = 'üéâ CORRE√á√ÉO CONCLU√çDA!\n';
    mensagem += 'Corrigidas ' + correcoes + ' linhas com dados incorretos.\n';
    mensagem += 'Execute listarSolicitacoes() para verificar o resultado.';
    
    console.log(mensagem);
    return mensagem;
    
  } catch (error) {
    console.error('‚ùå ERRO NA CORRE√á√ÉO:', error);
    return 'ERRO: ' + error.message;
  }
}

// FUN√á√ÉO PARA TESTAR AP√ìS CORRE√á√ÉO
function TESTAR_APOS_CORRECAO() {
  console.log('üß™ Testando sistema ap√≥s corre√ß√£o...');
  
  try {
    var resultado = listarSolicitacoes();
    
    if (resultado.sucesso && resultado.dados && resultado.dados.length > 0) {
      var primeiroItem = resultado.dados[0];
      
      console.log('üìä TESTE DO PRIMEIRO ITEM:');
      console.log('Prazo: "' + primeiroItem.prazo + '"');
      console.log('Status: "' + primeiroItem.status + '"');
      
      if (primeiroItem.prazo === 'Pendente') {
        return '‚ùå PROBLEMA AINDA EXISTE: Prazo ainda cont√©m "Pendente"';
      } else {
        return '‚úÖ CORRE√á√ÉO FUNCIONOU: Prazo e Status est√£o corretos';
      }
    } else {
      return '‚ö†Ô∏è Nenhum dado encontrado para testar';
    }
    
  } catch (error) {
    return '‚ùå ERRO NO TESTE: ' + error.message;
  }
}

// FUN√á√ÉO PARA CRIAR DADOS DE TESTE LIMPOS
function CRIAR_TESTE_LIMPO() {
  console.log('üß™ Criando teste com dados limpos...');
  
  var dadosTeste = {
    cliente: 'Cliente Teste Final',
    servico: 'Teste de Sistema',
    solicitante: 'Thiago',
    descricao: 'Teste ap√≥s corre√ß√£o do sistema',
    prazo: '15/07/2025' // DATA REAL, N√ÉO STATUS!
  };
  
  try {
    var resultado = criarSolicitacao(dadosTeste);
    
    if (resultado.sucesso) {
      console.log('‚úÖ Solicita√ß√£o de teste criada com sucesso');
      console.log('Prazo salvo: "' + resultado.dados.solicitacao.prazo + '"');
      return 'Teste criado com sucesso. Prazo: ' + resultado.dados.solicitacao.prazo;
    } else {
      return 'Erro ao criar teste: ' + resultado.mensagem;
    }
    
  } catch (error) {
    return 'Erro no teste: ' + error.message;
  }
}

// === INSTRU√á√ïES DE USO ===
/*
PASSOS PARA EXECUTAR A CORRE√á√ÉO:

1. Copie este c√≥digo no Google Apps Script
2. Execute manualmente: EXECUTAR_CORRECAO_URGENTE()
3. Teste o resultado: TESTAR_APOS_CORRECAO()
4. Crie um teste limpo: CRIAR_TESTE_LIMPO()
5. Verifique no frontend se os prazos aparecem corretamente

IMPORTANTE: Execute as fun√ß√µes na ordem acima!
*/
